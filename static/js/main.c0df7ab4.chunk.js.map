{"version":3,"sources":["components/Thumbnail.jsx","components/Rating.jsx","components/RandomQuote.jsx","components/Home.jsx","components/NavBar.jsx","components/Button.jsx","components/Quote.jsx","components/Search.jsx","components/Quotes.jsx","components/News.jsx","components/FormField.jsx","components/FormTextArea.jsx","components/NewEvent.jsx","App.js","serviceWorker.js","index.js"],"names":["Thumbnail","state","authors","this","props","author","split","join","console","log","axios","get","then","response","setState","data","query","pages","Object","keys","thumbnail","className","src","source","style","height","alt","Component","Rating","stars","Math","round","children","rating","i","RandomQuote","quote","en","Home","randomQuote","NavBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","Button","onClick","submit","type","info","Quote","handleSaveQuote","e","preventDefault","imageUrl","quoteData","post","Search","name","placeholder","onChange","searchInput","Quotes","target","value","search","filteredQuotes","quotes","filter","toLowerCase","includes","map","key","News","FormField","htmlFor","label","inputChange","rows","FormTextArea","NewEvent","handleNameInput","handleTaglineInput","tagline","handleDescriptionInput","description","handleFirst_brewedInput","first_brewed","handleBrewers_tipsInput","brewers_tips","handleAttenuation_level","attenuation_level","handleContributed_by","contributed_by","handleFormSubmit","allInput","date","time_start","time_end","venue_name","venue_address","defaultValue","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0df7ab4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n// axios\n//   .get(\n//     \"https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=Edsger%20W.%20Dijkstra|Elon%20Musk&format=json&prop=pageimages&pithumbsize=500\"\n//   )\n\n//   .then(result => console.log(result));\nexport default class Thumbnail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authors: {}\n      // authorString = ''\n    };\n  }\n\n  componentDidMount() {\n    // console.log(urlName);\n    // console.log(\n    //   urlName,\n    //   `https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=${urlName}&prop=pageimagesformat=json`\n    // );\n    if (this.props.author) {\n      let urlName = this.props.author.split(\" \").join(\"%20\");\n      console.log(\n        `https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=${this.props.author\n          .split(\" \")\n          .join(\"%20\")}&format=json&prop=pageimages&pithumbsize=500`\n      );\n      axios\n        // .get(\n        //   \"https://en.wikipedia.org/w/api.php?action=query&titles=George%20Boole&prop=pageimages&format=json&pithumbsize=100\"\n        // )\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=${this.props.author\n            .split(\" \")\n            .join(\"%20\")}&format=json&prop=pageimages&pithumbsize=500` //cors error\n        )\n        .then(response => {\n          // console.log(\n          //   response.data.query.pages[Object.keys(response.data.query.pages)[0]]\n          //   // response.data.query.pages\n          // );\n          this.setState({ authors: response.data.query });\n        });\n    }\n  }\n\n  // makeUrl = () => {\n  //   authorString\n  // }\n  //.query.pages.'175040'\n  render() {\n    // {\n    console.log(this.props.authors, this.state);\n    // }\n    if (\n      this.state.authors &&\n      this.state.authors.pages &&\n      // this.state.authors.pages[175040].thumbnail\n      Object.keys(this.state.authors.pages)[0] &&\n      this.state.authors.pages[Object.keys(this.state.authors.pages)[0]]\n        .thumbnail\n    ) {\n      // console.log(\n      //   this.state.authors.pages[Object.keys(this.state.authors.pages)[0]]\n      //     .thumbnail.source\n      // );\n      const imgStyle = {\n        height: \"200px\"\n      };\n      return (\n        <img\n          className=\"img-circle\"\n          src={\n            this.state.authors.pages[Object.keys(this.state.authors.pages)[0]]\n              .thumbnail.source\n          }\n          style={imgStyle}\n          alt=\"\"\n        />\n      );\n    } else {\n      return \"no pic\";\n    }\n  }\n}\n","import React from \"react\";\n\nconst Rating = props => {\n  let stars = Math.round(props.children);\n  let rating = \"\";\n  for (let i = 1; i <= 5; i++) {\n    rating += stars < i ? \"☆\" : \"★\";\n  }\n\n  return <p className=\"rating-stars\">{rating}</p>;\n};\n\nexport default Rating;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Thumbnail from \"./Thumbnail\";\nimport Rating from \"./Rating\";\n\nexport default class RandomQuote extends Component {\n  render() {\n    console.log(this.props.quote);\n    return (\n      <blockquote className=\"blockquote text-light\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 text-center\">\n            <Thumbnail author={this.props.quote.author} />\n          </div>\n          <div className=\"col-sm-12\">\n            <p className=\"\">{this.props.quote.en}</p>\n            <footer className=\"blockquote-footer\">\n              {this.props.quote.author}\n            </footer>\n            <Rating>{this.props.quote.rating}</Rating>\n            {/* <span>voted by {this.state.quote.numberOfVotes} people</span> */}\n          </div>\n        </div>\n      </blockquote>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport RandomQuote from \"./RandomQuote\";\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      randomQuote: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"https://programming-quotes-api.herokuapp.com/quotes/random\")\n      .then(response => {\n        console.log(response.data);\n        this.setState({ randomQuote: response.data });\n      });\n    console.log(this.state);\n  }\n\n  render() {\n    {\n      console.log(this.state.randomQuote);\n    }\n    return <RandomQuote quote={this.state.randomQuote} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Brand } from \"react-bootstrap\";\nimport { Toggle } from \"react-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\n// import { Link } from \"react-bootstrap\";\nimport { Collapse } from \"react-bootstrap\";\n\nexport default class NavBar extends Component {\n  render() {\n    return (\n      <Navbar expand=\"lg\" className=\"background-dark\">\n        <Navbar.Brand href=\"/\">\n          <strong className=\"font-orange\">5 SECONDS OF KNOWLEDGE</strong>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" >\n          <Nav className=\"mr-auto\">\n            {/* <Nav.Link href=\"#quotes\">Search Quotes</Nav.Link>\n            <Nav.Link href=\"#saved-quotes\">Saved Quotes</Nav.Link> */}\n            <li className=\"nav-item\">\n              <Link to={\"/quotes\"} className=\"nav-link text-light\">\n                Search Quotes\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/saved-quotes\"} className=\"nav-link text-light\">\n                Saved Quotes\n              </Link>\n            </li>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      // {/* <nav className=\"navbar navbar-expand-lg\">\n      //   <Link className=\"navbar-brand font-orange\" to=\"/\">\n      //     <img\n      //       src=\"../images/logo.png\"\n      //       width=\"30\"\n      //       height=\"30\"\n      //       className=\"d-inline-block align-top\"\n      //       alt=\"\"\n      //     />\n      //     <strong>5 SECONDS OF KNOWLEDGE</strong>\n      //   </Link>\n      //   <button\n      //     className=\"navbar-toggler\"\n      //     type=\"button\"\n      //     data-toggle=\"collapse\"\n      //     data-target=\"#navbarNav\"\n      //     aria-controls=\"navbarNav\"\n      //     aria-expanded=\"false\"\n      //     aria-label=\"Toggle navigation\"\n      //   >\n      //     <span className=\"navbar-toggler-icon\"></span>\n      //   </button>\n      //   <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n      //     <ul className=\"navbar-nav\">\n      //       {/* <li className=\"nav-item\">\n      //         <Link to={\"/\"} className=\"nav-link text-light\">\n      //           Home\n      //           <span className=\"sr-only\">(current)</span>\n      //         </Link>\n      //       </li> */}\n      //       <li className=\"nav-item\">\n      //         <Link to={\"/quotes\"} className=\"nav-link text-light\">\n      //           Search Quotes\n      //         </Link>\n      //       </li>\n      //       {/* <li className=\"nav-item\">\n      //         <Link to={\"/daily-quote\"} className=\"nav-link text-light\">\n      //           Daily Quote\n      //         </Link>\n      //       </li> */}\n      //       {/* <li className=\"nav-item\">\n      //         <Link to={\"/make-study-group\"} className=\"nav-link text-light\">\n      //           Make Study Group\n      //         </Link>\n      //       </li> */}\n      //       <li className=\"nav-item\">\n      //         <Link to={\"/saved-quotes\"} className=\"nav-link text-light\">\n      //           Saved Quotes\n      //         </Link>\n      //       </li>\n      //     </ul>\n      //   </div>\n      // </nav> */}\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Button extends Component {\n  render() {\n    return (\n      <button\n        onClick={this.props.submit}\n        type=\"button\"\n        className=\"btn btn-outline-primary\"\n      >\n        {this.props.info}\n      </button>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Rating from \"./Rating\";\nimport Thumbnail from \"./Thumbnail\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\n\nexport default class Quote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageUrl: \"\",\n      quote: \"\",\n      author: \"\",\n      rating: \"\"\n    };\n  }\n\n  handleSaveQuote = e => {\n    console.log(\"save!\");\n    e.preventDefault();\n    this.setState({\n      imageUrl: \"\",\n      quote: \"\",\n      author: \"\",\n      rating: \"\"\n    });\n    const quoteData = this.state;\n    axios\n      // .post(\"https://ironrest.herokuapp.com/createCollection/quotes\") // create a collection\n      .post(\"https://ironrest.herokuapp.com/quotes\", quoteData) // Insert new document in collection\n      .then(e => console.log(e));\n  };\n\n  render() {\n    return (\n      <blockquote className=\"blockquote text-light bg-dark\">\n        <div className=\"row\">\n          <div className=\"col-sm-3 text-center\">\n            <Thumbnail author={this.props.quote.author} />\n          </div>\n          <div className=\"col-sm-9\">\n            <p className=\"\">{this.props.quote.en}</p>\n            <footer className=\"blockquote-footer\">\n              {this.props.quote.author}\n            </footer>\n            <Rating>{this.props.quote.rating}</Rating>\n            <Button submit={e => this.handleSaveQuote(e)} info=\"Save\" />\n            {/* <span>voted by {this.props.quote.numberOfVotes} people</span> */}\n          </div>\n        </div>\n      </blockquote>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Search extends Component {\n  render() {\n    return (\n      <form className=\"container\">\n        <div className=\"form-groups\">\n          <div className=\"field has-addons\">\n            <div className=\"control\">\n              <input\n                className=\"form-control\"\n                name=\"search\"\n                type=\"search\"\n                placeholder=\"Search programmer\"\n                onChange={this.props.searchInput}\n              />\n            </div>\n            {/* <div className=\"control\">\n              <a className=\"button is-info\">Search</a>\n            </div> */}\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Quote from \"./Quote\";\nimport Search from \"./Search\";\n\nexport default class Quotes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quotes: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"https://programming-quotes-api.herokuapp.com/quotes\")\n      .then(response => {\n        this.setState({ quotes: response.data });\n        console.log(response.data);\n      });\n  }\n\n  searchInput = e => {\n    console.log(e.target.value);\n    let search = e.target.value;\n    let filteredQuotes = this.state.quotes.filter(quote => {\n      if (quote.author.toLowerCase().includes(search.toLowerCase())) {\n        return quote;\n      }\n    });\n    this.setState({\n      quotes: filteredQuotes\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"container\">\n          <Search searchInput={e => this.searchInput(e)} className=\"input\" />\n        </div>\n        <div className=\"container\">\n          {this.state.quotes.map((quote, i) => {\n            return <Quote quote={quote} key={i} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class News extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nexport default class FormField extends Component {\n  render() {\n    return (\n      <div className=\"form-group container\">\n        <label htmlFor=\"exampleInputEmail1\">{this.props.label}</label>\n        <input\n          className=\"form-control form-control-lg\"\n          name={this.props.name}\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          onChange={this.props.inputChange}\n          rows={this.props.rows}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class FormTextArea extends Component {\n  render() {\n    return (\n      <div className=\"form-group container\">\n        <label htmlFor=\"exampleInputEmail1\">{this.props.label}</label>\n        <textarea\n          className=\"form-control form-control-lg\"\n          value={this.props.value}\n          name={this.props.name}\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          onChange={this.props.inputChange}\n          rows={this.props.rows}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport FormField from \"./FormField\";\nimport Button from \"./Button\";\nimport FormTextArea from \"./FormTextArea\";\nimport axios from \"axios\";\n\nexport default class NewEvent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      date: \"\",\n      time_start: \"\",\n      time_end: \"\",\n      venue_name: \"\",\n      venue_address: \"\",\n      description: \"\"\n    };\n  }\n  handleNameInput = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n  handleTaglineInput = e => {\n    this.setState({\n      tagline: e.target.value\n    });\n  };\n  handleDescriptionInput = e => {\n    console.log(e.target.value);\n    this.setState({\n      description: e.target.value\n    });\n  };\n  handleFirst_brewedInput = e => {\n    this.setState({\n      first_brewed: e.target.value\n    });\n  };\n  handleBrewers_tipsInput = e => {\n    this.setState({\n      brewers_tips: e.target.value\n    });\n  };\n  handleAttenuation_level = e => {\n    this.setState({\n      attenuation_level: e.target.value\n    });\n  };\n  handleContributed_by = e => {\n    this.setState({\n      contributed_by: e.target.value\n    });\n  };\n  handleFormSubmit = e => {\n    const allInput = this.state;\n    e.preventDefault();\n    axios\n      .post(\"https://ironrest.herokuapp.com/createCollection/quotes-event\u0010\", allInput)\n      .then(e => console.log(e));\n  };\n  render() {\n    console.log(this.state);\n    return (\n      <form>\n        <FormField\n          inputChange={e => this.handleNameInput(e)}\n          name=\"name\"\n          label=\"Event Name\"\n          type=\"text\"\n          placeholder=\"Event name\"\n        />\n        <FormField\n          inputChange={e => this.handleFirst_brewedInput(e)}\n          name=\"date\"\n          label=\"Date\"\n          type=\"date\"\n          placeholder=\"date\"\n        />\n        <FormField\n          inputChange={e => this.handleFirst_brewedInput(e)}\n          name=\"time_start\"\n          label=\"Time Start\"\n          type=\"time\"\n          placeholder=\"time start\"\n        />\n        <FormField\n          inputChange={e => this.handleFirst_brewedInput(e)}\n          name=\"time_end\"\n          label=\"Time End\"\n          type=\"time\"\n          placeholder=\"time end\"\n        />\n        <FormField\n          inputChange={e => this.handleTaglineInput(e)}\n          name=\"tagline\"\n          label=\"Tagline\"\n          type=\"text\"\n          placeholder=\"Not the best beer\"\n        />\n        <FormTextArea\n          defaultValue=\"\" // need to set default value to use textarea otherwise it returns error\n          inputChange={e => this.handleDescriptionInput(e)}\n          label=\"Description\"\n          name=\"description\"\n          placeholder=\"describe your event\"\n        />\n        <Button\n          submit={e => this.handleFormSubmit(e)}\n          info=\"Creat Study Group\"\n        />\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\n// import axios from \"axios\";\nimport Home from \"./components/Home\";\nimport NavBar from \"./components/NavBar\";\nimport Quotes from \"./components/Quotes\";\nimport News from \"./components/News\";\n// import StudyGroup from \"./components/StudyGroup\";\nimport RandomQuote from \"./components/RandomQuote\";\nimport NewEvent from \"./components/NewEvent\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/quotes\" component={Quotes} />\n        <Route exact path=\"/daily-quote\" component={RandomQuote} />\n        <Route exact path=\"/news\" component={News} />\n        <Route exact path=\"/make-study-group\" component={NewEvent} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}