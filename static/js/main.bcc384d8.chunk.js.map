{"version":3,"sources":["images/109135379-photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept.jpg","components/Rating.jsx","components/Button.jsx","components/RandomQuote.jsx","components/Home.jsx","components/NavBar.jsx","components/Thumbnail.jsx","components/Quote.jsx","components/Search.jsx","components/Quotes.jsx","components/SavedQuote.jsx","components/SavedQuotes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Rating","props","stars","Math","round","children","rating","i","className","Button","onClick","this","submit","type","info","Component","RandomQuote","refreshPage","window","location","reload","handleSaveQuote","e","console","log","preventDefault","setState","imageUrl","quote","author","en","quoteData","state","axios","post","then","value","Home","randomQuote","get","response","data","NavBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","Thumbnail","authors","name","split","join","query","pages","Object","keys","thumbnail","setImage","source","src","style","height","alt","require","Quote","image","Search","placeholder","onChange","searchInput","Quotes","buildUrl","url","finalUrl","slice","res","images","j","push","catch","err","target","search","img","filteredQuotes","quotes","filter","toLowerCase","includes","getImages","map","title","uniqueAuthors","values","reduce","acc","cur","assign","key","SavedQuote","handleRemoveQuote","delete","_id","SavedQuotes","deleteQuote","savedQuotesCopy","savedQuotes","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcc384d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/109135379-photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept.bfd98721.jpg\";","import React from \"react\";\n\nconst Rating = props => {\n  let stars = Math.round(props.children);\n  let rating = \"\";\n  for (let i = 1; i <= 5; i++) {\n    rating += stars < i ? \"☆\" : \"★\";\n  }\n\n  return <p className=\"rating-stars\">{rating}</p>;\n};\n\nexport default Rating;\n","import React, { Component } from \"react\";\n\nexport default class Button extends Component {\n  render() {\n    return (\n      <button onClick={this.props.submit} type=\"button\">\n        {this.props.info}\n      </button>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Rating from \"./Rating\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\n\nexport default class RandomQuote extends Component {\n  refreshPage = () => {\n    window.location.reload(false);\n  };\n  handleSaveQuote = e => {\n    console.log(\"save!\");\n    e.preventDefault();\n    this.setState({\n      imageUrl: `${this.props.quote.author}`,\n      quote: `${this.props.quote.en}`,\n      author: `${this.props.quote.author}`,\n      rating: `${this.props.quote.rating}`\n    });\n    const quoteData = this.state;\n    axios\n      // .post(\"https://ironrest.herokuapp.com/createCollection/quotes\") // create a collection\n      .post(\"https://ironrest.herokuapp.com/quotes\", quoteData) // Insert new document in collection\n      .then(e => console.log(e));\n  };\n  render() {\n    console.log(this.props.quote);\n    return (\n      <blockquote className=\"blockquote text-light\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 text-center p-5\">\n            <button value=\"Refresh Page\" onClick={this.refreshPage}>\n              Gimme More\n            </button>\n            {/* <Thumbnail author={this.props.quote.author} /> */}\n          </div>\n          <div className=\"col-sm-12 p-2\">\n            <p className=\"p-3\">{this.props.quote.en}</p>\n            <footer className=\"blockquote-footer\">\n              {this.props.quote.author}\n            </footer>\n            <Rating>{this.props.quote.rating}</Rating>\n            <Button submit={e => this.handleSaveQuote(e)} info=\"Save\" />\n            {/* <span>voted by {this.state.quote.numberOfVotes} people</span> */}\n          </div>\n        </div>\n      </blockquote>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport RandomQuote from \"./RandomQuote\";\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      randomQuote: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"https://programming-quotes-api.herokuapp.com/quotes/random\")\n      .then(response => {\n        console.log(response.data);\n        this.setState({ randomQuote: response.data });\n      });\n    console.log(this.state);\n  }\n\n  render() {\n    \n      console.log(this.state.randomQuote);\n    \n    return <RandomQuote quote={this.state.randomQuote} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\n\nexport default class NavBar extends Component {\n  render() {\n    return (\n      <Navbar expand=\"lg\" className=\"background-dark fixed-top\">\n        <Navbar.Brand href=\"/hacker-path/\">\n          <strong className=\"font-orange\">5 SECONDS OF KNOWLEDGE</strong>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/quotes/\"} className=\"nav-link text-light\">\n                Search Quotes\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/saved-quotes/\"} className=\"nav-link text-light\">\n                Saved Quotes\n              </Link>\n            </li>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Thumbnail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authors: [],\n      imageUrl: {\n        name: \"url\"\n      }\n    };\n  }\n\n  //|\n\n  componentDidMount() {\n    if (this.props.author) {\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=${this.props.author\n            .split(\" \")\n            .join(\"%20\")}\n          &format=json&prop=pageimages&pithumbsize=500` //cors error\n        )\n        .then(response => {\n          // console.log(\n          //   // response.data.query.pages[Object.keys(response.data.query.pages)[0]]\n          //   response.data.query\n          // );\n          console.log(this.state.imageUrl);\n          this.setState({ authors: response.data.query });\n          console.log(this.props.author, response.data.query);\n          if (\n            this.state.authors &&\n            this.state.authors.pages &&\n            Object.keys(this.state.authors.pages)[0] &&\n            this.state.authors.pages[Object.keys(this.state.authors.pages)[0]]\n              .thumbnail\n          ) {\n            // wanted to add new properties in imageUrl, but it overwrites previous property\n            console.log(this.props.author);\n            const setImage = {\n              ...this.state.imageUrl,\n              [this.props.author]: this.state.authors.pages[\n                Object.keys(this.state.authors.pages)[0]\n              ].thumbnail.source\n            };\n            this.setState({ imageUrl: setImage });\n            console.log(this.state.imageUrl);\n          }\n        });\n    }\n  }\n\n  render() {\n    // {\n    // console.log(this.props.authors, this.state);\n    // }\n    if (\n      this.state.authors &&\n      this.state.authors.pages &&\n      Object.keys(this.state.authors.pages)[0] &&\n      this.state.authors.pages[Object.keys(this.state.authors.pages)[0]]\n        .thumbnail\n    ) {\n      // console.log(\n      //   this.state.authors.pages[Object.keys(this.state.authors.pages)[0]]\n      //     .thumbnail.source\n      // );\n      const imgStyle = {\n        height: \"200px\"\n      };\n      return (\n        <img\n          className=\"img-circle\"\n          src={\n            this.state.authors.pages[Object.keys(this.state.authors.pages)[0]]\n              .thumbnail.source\n          }\n          style={imgStyle}\n          alt=\"\"\n        />\n      );\n    } else {\n      const imgStyle = {\n        height: \"200px\"\n      };\n      // return \"no pic\";\n      return (\n        <img\n          // src=\"../images/112815953-no-image-available-icon-flat-vector.jpg\"\n          src={require(\"../images/109135379-photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept.jpg\")}\n          className=\"img-circle\"\n          style={imgStyle}\n          alt=\"\"\n        />\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport Rating from \"./Rating\";\nimport Thumbnail from \"./Thumbnail\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\n\nexport default class Quote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageUrl: \"\",\n      quote: \"\",\n      author: \"\",\n      rating: \"\"\n    };\n  }\n\n  handleSaveQuote = e => {\n    console.log(\"save!\");\n    e.preventDefault();\n    this.setState({\n      imageUrl: `${this.props.quote.author}`,\n      quote: `${this.props.quote.en}`,\n      author: `${this.props.quote.author}`,\n      rating: `${this.props.quote.rating}`\n    });\n    const quoteData = this.state;\n    axios\n      // .post(\"https://ironrest.herokuapp.com/createCollection/quotes\") // create a collection\n      .post(\"https://ironrest.herokuapp.com/quotes\", quoteData) // Insert new document in collection\n      .then(e => console.log(e));\n  };\n\n  render() {\n    console.log(this);\n    return (\n      <blockquote className=\"blockquote text-light bg-dark p-3\">\n        <div className=\"row\">\n          <div className=\"col-sm-3 text-center\">\n            <Thumbnail\n              author={this.props.quote.author}\n              image={this.props.image}\n            />\n          </div>\n          <div className=\"col-sm-9\">\n            <p className=\"p-3\">{this.props.quote.en}</p>\n            <footer className=\"blockquote-footer\">\n              {this.props.quote.author}\n            </footer>\n            <Rating>{this.props.quote.rating}</Rating>\n            <Button submit={e => this.handleSaveQuote(e)} info=\"Save\" />\n            {/* <span>voted by {this.props.quote.numberOfVotes} people</span> */}\n          </div>\n        </div>\n      </blockquote>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Search extends Component {\n  render() {\n    return (\n      <form className=\"container\">\n        <div className=\"form-groups\">\n          <div className=\"field has-addons\">\n            <div className=\"control\">\n              <input\n                className=\"form-control\"\n                name=\"search\"\n                type=\"search\"\n                placeholder=\"Search programmer\"\n                onChange={this.props.searchInput}\n              />\n            </div>\n            {/* <div className=\"control\">\n              <a className=\"button is-info\">Search</a>\n            </div> */}\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Quote from \"./Quote\";\nimport Search from \"./Search\";\n\nexport default class Quotes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quotes: [],\n      images: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"https://programming-quotes-api.herokuapp.com/quotes\")\n      .then(response => {\n        let uniqueAuthors = Object.values(\n          response.data.reduce(\n            (acc, cur) => Object.assign(acc, { [cur.author]: cur }),\n            {}\n          )\n        );\n\n        this.setState({ quotes: uniqueAuthors });\n        console.log(response.data);\n        this.buildUrl(uniqueAuthors);\n      });\n  }\n  buildUrl = data => {\n    let url = \"\";\n    for (let i = 0; i < 50; i++) {\n      url += data[i].author + \"|\";\n    }\n\n    let finalUrl = `https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=${url.slice(\n      0,\n      -1\n    )}&format=json&prop=pageimages&pithumbsize=500`;\n    console.log(finalUrl);\n    axios\n      .get(finalUrl)\n      .then(res => {\n        console.log(res.data);\n        let images = [];\n        for (let j in res.data.query.pages) {\n          images.push(res.data.query.pages[j]);\n        }\n        this.setState({ images });\n      })\n      .catch(err => console.log(err));\n  };\n\n  searchInput = e => {\n    console.log(e.target.value);\n    let search = e.target.value;\n    let img = [];\n    let filteredQuotes = this.state.quotes.filter((quote, i) => {\n      if (quote.author.toLowerCase().includes(search.toLowerCase())) {\n        img.push(this.state.images[i]);\n        return quote;\n      }\n    });\n    this.setState({\n      quotes: filteredQuotes\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"container p-2\">\n          <Search searchInput={e => this.searchInput(e)} className=\"input\" />\n        </div>\n        <div className=\"container\">\n          {this.state.quotes.map((quote, i) => {\n            console.log(this.state.images[i]);\n\n            {\n              return (\n                <Quote quote={quote} key={i} image={this.state.images[i]} />\n              );\n            }\n          })}\n        </div>\n      </div>\n    );\n  }\n  getImages = () => {\n    console.log(\"get image\");\n    this.state.images.map(author => {\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=${author.title\n            .split(\" \")\n            .join(\"%20\")}\n            &format=json&prop=pageimages&pithumbsize=500` //cors error\n        )\n        .then(response => console.log(response));\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport Rating from \"./Rating\";\nimport Thumbnail from \"./Thumbnail\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\n\nexport default class SavedQuote extends Component {\n  handleRemoveQuote = e => {\n    console.log(\"remove!\");\n    e.preventDefault();\n    axios\n      .delete(`https://ironrest.herokuapp.com/quotes/${this.props.quote._id}`) // delete document in collection\n      .then(this.props.delete()); // call function in props\n  };\n\n  render() {\n    return (\n      <blockquote className=\"blockquote text-light bg-dark p-3\">\n        <div className=\"row\">\n          <div className=\"col-sm-3 text-center\">\n            <Thumbnail\n              author={this.props.quote.author}\n              image={this.props.image}\n            />\n          </div>\n          <div className=\"col-sm-9\">\n            <p className=\"p-3\">{this.props.quote.quote}</p>\n            <footer className=\"blockquote-footer\">\n              {this.props.quote.author}\n            </footer>\n            <Rating>{this.props.quote.rating}</Rating>\n            <Button submit={e => this.handleRemoveQuote(e)} info=\"Remove\" />\n            {/* <span>voted by {this.props.quote.numberOfVotes} people</span> */}\n          </div>\n        </div>\n      </blockquote>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport SavedQuote from \"./SavedQuote\";\n// import Search from \"./Search\";\n\nexport default class SavedQuotes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      savedQuotes: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://ironrest.herokuapp.com/quotes\").then(response => {\n      console.log(this.state);\n      console.log(response.data);\n      this.setState({\n        savedQuotes: response.data\n      });\n    });\n  }\n\n  deleteQuote = e => {\n    let savedQuotesCopy = this.state.savedQuotes.filter(\n      // filter array in this.state,\n      quote => quote._id !== e\n    );\n    console.log(e);\n    console.log(savedQuotesCopy);\n    // then set state\n    this.setState({\n      savedQuotes: savedQuotesCopy\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        {/* <div className=\"container p-2\">\n          <Search searchInput={e => this.searchInput(e)} className=\"input\" />\n        </div> */}\n        <div className=\"container\">\n          {this.state.savedQuotes.map((quote, i) => {\n            return (\n              <SavedQuote\n                quote={quote}\n                delete={() => this.deleteQuote(quote._id)} // pass anonymous function as props\n                key={i}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport NavBar from \"./components/NavBar\";\nimport Quotes from \"./components/Quotes\";\nimport RandomQuote from \"./components/RandomQuote\";\nimport SavedQuotes from \"./components/SavedQuotes\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import NewEvent from \"./components/NewEvent\";\n// import axios from \"axios\";\n// import News from \"./components/News\";\n// import StudyGroup from \"./components/StudyGroup\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/quotes\" component={Quotes} />\n        <Route exact path=\"/daily-quote\" component={RandomQuote} />\n        <Route exact path=\"/saved-quotes\" component={SavedQuotes} />\n        {/* <Route exact path=\"/news\" component={News} /> */}\n        {/* <Route exact path=\"/make-study-group\" component={NewEvent} /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}