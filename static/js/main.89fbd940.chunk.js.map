{"version":3,"sources":["images/109135379-photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept.jpg","components/Rating.jsx","components/Button.jsx","components/RandomQuote.jsx","components/Home.jsx","components/NavBar.jsx","components/Thumbnail.jsx","components/Quote.jsx","components/Search.jsx","components/Quotes.jsx","components/SavedQuote.jsx","components/SavedQuotes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Rating","props","stars","Math","round","children","rating","i","className","Button","onClick","this","submit","type","info","Component","RandomQuote","refreshPage","window","location","reload","handleSaveQuote","e","console","log","preventDefault","setState","imageUrl","quote","author","en","quoteData","state","axios","post","then","value","Home","randomQuote","get","response","data","NavBar","toggleNavbar","bind","closeNavbar","collapsed","Navbar","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","id","isOpen","Nav","NavItem","to","Thumbnail","authors","name","split","join","query","pages","Object","keys","thumbnail","setImage","source","src","style","height","alt","require","Quote","image","Search","placeholder","onChange","searchInput","Quotes","buildUrl","url","finalUrl","slice","res","images","j","push","catch","err","target","search","img","filteredQuotes","quotes","filter","toLowerCase","includes","getImages","map","title","uniqueAuthors","values","reduce","acc","cur","assign","key","SavedQuote","handleRemoveQuote","delete","_id","SavedQuotes","deleteQuote","savedQuotesCopy","savedQuotes","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89fbd940.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/109135379-photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept.bfd98721.jpg\";","import React from \"react\";\n\nconst Rating = props => {\n  let stars = Math.round(props.children);\n  let rating = \"\";\n  for (let i = 1; i <= 5; i++) {\n    rating += stars < i ? \"☆\" : \"★\";\n  }\n\n  return <p className=\"rating-stars\">{rating}</p>;\n};\n\nexport default Rating;\n","import React, { Component } from \"react\";\n\nexport default class Button extends Component {\n  render() {\n    return (\n      <button onClick={this.props.submit} type=\"button\">\n        {this.props.info}\n      </button>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Rating from \"./Rating\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\n\nexport default class RandomQuote extends Component {\n  refreshPage = () => {\n    window.location.reload(false);\n  };\n  handleSaveQuote = e => {\n    console.log(\"save!\");\n    e.preventDefault();\n    this.setState(\n      {\n        imageUrl: `${this.props.quote.author}`,\n        quote: `${this.props.quote.en}`,\n        author: `${this.props.quote.author}`,\n        rating: `${this.props.quote.rating}`\n      },\n      // set anonymous function to save on the first click\n      () => {\n        const quoteData = this.state;\n        console.log(quoteData); // console.log when you get stuck\n        axios\n          // .post(\"https://ironrest.herokuapp.com/createCollection/quotes\") // create a collection\n          .post(\"https://ironrest.herokuapp.com/quotes\", quoteData) // Insert new document in collection\n          .then(e => console.log(e));\n      }\n    );\n  };\n  render() {\n    console.log(this.props.quote);\n    return (\n      <blockquote className=\"blockquote text-light\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 text-center p-5\">\n            <button value=\"Refresh Page\" onClick={this.refreshPage}>\n              Gimme More\n            </button>\n          </div>\n          <div className=\"col-sm-12 p-2\">\n            <p className=\"p-3\">{this.props.quote.en}</p>\n            <footer className=\"blockquote-footer\">\n              {this.props.quote.author}\n            </footer>\n            <Rating>{this.props.quote.rating}</Rating>\n            <Button submit={e => this.handleSaveQuote(e)} info=\"Save\" />\n          </div>\n        </div>\n      </blockquote>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport RandomQuote from \"./RandomQuote\";\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      randomQuote: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"https://programming-quotes-api.herokuapp.com/quotes/random\")\n      .then(response => {\n        console.log(response.data);\n        this.setState({ randomQuote: response.data });\n      });\n    console.log(this.state);\n  }\n\n  render() {\n    console.log(this.state.randomQuote);\n    return <RandomQuote quote={this.state.randomQuote} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem\n} from \"react-bootstrap\";\n\nexport default class NavBar extends Component {\n  constructor() {\n    super();\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.closeNavbar = this.closeNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  closeNavbar() {\n    if (this.state.collapsed !== true) {\n      this.toggleNavbar();\n    }\n  }\n\n  render() {\n    return (\n      <Navbar expand=\"lg\" className=\"background-dark\" fixed=\"top\">\n        >\n        <Navbar.Brand href=\"/hacker-path/\">\n          <strong className=\"font-orange\">5 SECONDS OF KNOWLEDGE</strong>\n        </Navbar.Brand>\n        <Navbar.Toggle\n          aria-controls=\"responsive-navbar-nav\"\n          onClick={this.toggleNavbar}\n        />\n        <Navbar.Collapse\n          id=\"responsive-navbar-nav\"\n          isOpen={!this.state.collapsed}\n        >\n          <Nav className=\"mr-auto\">\n            <NavItem>\n              <Link\n                to={\"/quotes/\"}\n                className=\"nav-link text-light\"\n                onClick={this.closeNavbar}\n              >\n                Search Quotes\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link\n                to={\"/saved-quotes/\"}\n                className=\"nav-link text-light\"\n                onClick={this.closeNavbar}\n              >\n                Saved Quotes\n              </Link>\n            </NavItem>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Thumbnail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authors: [],\n      imageUrl: {\n        name: \"url\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.author) {\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=${this.props.author\n            .split(\" \")\n            .join(\"%20\")}\n          &format=json&prop=pageimages&pithumbsize=500` //cors error\n        )\n        .then(response => {\n          console.log(this.state.imageUrl);\n          this.setState({ authors: response.data.query });\n          console.log(this.props.author, response.data.query);\n          if (\n            this.state.authors &&\n            this.state.authors.pages &&\n            Object.keys(this.state.authors.pages)[0] &&\n            this.state.authors.pages[Object.keys(this.state.authors.pages)[0]]\n              .thumbnail\n          ) {\n            // wanted to add new properties in imageUrl, but it overwrites previous property\n            console.log(this.props.author);\n            const setImage = {\n              ...this.state.imageUrl,\n              [this.props.author]: this.state.authors.pages[\n                Object.keys(this.state.authors.pages)[0]\n              ].thumbnail.source\n            };\n            this.setState({ imageUrl: setImage });\n            console.log(this.state.imageUrl);\n          }\n        });\n    }\n  }\n\n  render() {\n    if (\n      this.state.authors &&\n      this.state.authors.pages &&\n      Object.keys(this.state.authors.pages)[0] &&\n      this.state.authors.pages[Object.keys(this.state.authors.pages)[0]]\n        .thumbnail\n    ) {\n      const imgStyle = {\n        height: \"200px\"\n      };\n      return (\n        <img\n          className=\"img-thumbnail\"\n          src={\n            this.state.authors.pages[Object.keys(this.state.authors.pages)[0]]\n              .thumbnail.source\n          }\n          style={imgStyle}\n          alt=\"\"\n        />\n      );\n    } else {\n      const imgStyle = {\n        height: \"200px\"\n      };\n      return (\n        <img\n          src={require(\"../images/109135379-photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept.jpg\")}\n          className=\"img-thumbnail\"\n          style={imgStyle}\n          alt=\"\"\n        />\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport Rating from \"./Rating\";\nimport Thumbnail from \"./Thumbnail\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\n\nexport default class Quote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageUrl: \"\",\n      quote: \"\",\n      author: \"\",\n      rating: \"\"\n    };\n  }\n\n  handleSaveQuote = e => {\n    console.log(\"save!\");\n    e.preventDefault();\n    this.setState(\n      {\n        imageUrl: `${this.props.quote.author}`,\n        quote: `${this.props.quote.en}`,\n        author: `${this.props.quote.author}`,\n        rating: `${this.props.quote.rating}`\n      },\n      // set anonymous function to save on the first click\n      () => {\n        const quoteData = this.state;\n        axios\n          // .post(\"https://ironrest.herokuapp.com/createCollection/quotes\") // create a collection\n          .post(\"https://ironrest.herokuapp.com/quotes\", quoteData) // Insert new document in collection\n          .then(e => console.log(e));\n      }\n    );\n  };\n\n  render() {\n    console.log(this);\n    return (\n      <blockquote className=\"blockquote text-light bg-dark p-3 rounded\">\n        <div className=\"row\">\n          <div className=\"col-sm-3 text-center\">\n            <Thumbnail\n              author={this.props.quote.author}\n              image={this.props.image}\n            />\n          </div>\n          <div className=\"col-sm-9\">\n            <p className=\"p-3\">{this.props.quote.en}</p>\n            <footer className=\"blockquote-footer\">\n              {this.props.quote.author}\n            </footer>\n            <Rating>{this.props.quote.rating}</Rating>\n            <Button submit={e => this.handleSaveQuote(e)} info=\"Save\" />\n          </div>\n        </div>\n      </blockquote>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Search extends Component {\n  render() {\n    return (\n      <form className=\"container\">\n        <div className=\"form-groups\">\n          <div className=\"field has-addons\">\n            <div className=\"control\">\n              <input\n                className=\"form-control\"\n                name=\"search\"\n                type=\"search\"\n                placeholder=\"Search programmer\"\n                onChange={this.props.searchInput}\n              />\n            </div>\n            {/* <div className=\"control\">\n              <a className=\"button is-info\">Search</a>\n            </div> */}\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Quote from \"./Quote\";\nimport Search from \"./Search\";\n\nexport default class Quotes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quotes: [],\n      images: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"https://programming-quotes-api.herokuapp.com/quotes\")\n      .then(response => {\n        let uniqueAuthors = Object.values(\n          response.data.reduce(\n            (acc, cur) => Object.assign(acc, { [cur.author]: cur }),\n            {}\n          )\n        );\n\n        this.setState({ quotes: uniqueAuthors });\n        console.log(response.data);\n        this.buildUrl(uniqueAuthors);\n      });\n  }\n  buildUrl = data => {\n    let url = \"\";\n    for (let i = 0; i < 50; i++) {\n      url += data[i].author + \"|\";\n    }\n\n    let finalUrl = `https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=${url.slice(\n      0,\n      -1\n    )}&format=json&prop=pageimages&pithumbsize=500`;\n    console.log(finalUrl);\n    axios\n      .get(finalUrl)\n      .then(res => {\n        console.log(res.data);\n        let images = [];\n        for (let j in res.data.query.pages) {\n          images.push(res.data.query.pages[j]);\n        }\n        this.setState({ images });\n      })\n      .catch(err => console.log(err));\n  };\n\n  searchInput = e => {\n    console.log(e.target.value);\n    let search = e.target.value;\n    let img = [];\n    let filteredQuotes = this.state.quotes.filter((quote, i) => {\n      if (quote.author.toLowerCase().includes(search.toLowerCase())) {\n        img.push(this.state.images[i]);\n        return quote;\n      }\n    });\n    this.setState({\n      quotes: filteredQuotes\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"container p-2\">\n          <Search searchInput={e => this.searchInput(e)} className=\"input\" />\n        </div>\n        <div className=\"container\">\n          {this.state.quotes.map((quote, i) => {\n            console.log(this.state.images[i]);\n\n            {\n              return (\n                <Quote quote={quote} key={i} image={this.state.images[i]} />\n              );\n            }\n          })}\n        </div>\n      </div>\n    );\n  }\n  getImages = () => {\n    console.log(\"get image\");\n    this.state.images.map(author => {\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=${author.title\n            .split(\" \")\n            .join(\"%20\")}\n            &format=json&prop=pageimages&pithumbsize=500` //cors error\n        )\n        .then(response => console.log(response));\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport Rating from \"./Rating\";\nimport Thumbnail from \"./Thumbnail\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\n\nexport default class SavedQuote extends Component {\n  handleRemoveQuote = e => {\n    console.log(\"remove!\");\n    e.preventDefault();\n    axios\n      .delete(`https://ironrest.herokuapp.com/quotes/${this.props.quote._id}`) // delete document in collection\n      .then(this.props.delete()); // call function in props\n  };\n\n  render() {\n    return (\n      <blockquote className=\"blockquote text-light bg-dark p-3 rounded\">\n        <div className=\"row\">\n          <div className=\"col-sm-3 text-center\">\n            <Thumbnail\n              author={this.props.quote.author}\n              image={this.props.image}\n            />\n          </div>\n          <div className=\"col-sm-9\">\n            <p className=\"p-3\">{this.props.quote.quote}</p>\n            <footer className=\"blockquote-footer\">\n              {this.props.quote.author}\n            </footer>\n            <Rating>{this.props.quote.rating}</Rating>\n            <Button submit={e => this.handleRemoveQuote(e)} info=\"Remove\" />\n            {/* <span>voted by {this.props.quote.numberOfVotes} people</span> */}\n          </div>\n        </div>\n      </blockquote>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport SavedQuote from \"./SavedQuote\";\n// import Search from \"./Search\";\n\nexport default class SavedQuotes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      savedQuotes: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://ironrest.herokuapp.com/quotes\").then(response => {\n      console.log(this.state);\n      console.log(response.data);\n      this.setState({\n        savedQuotes: response.data\n      });\n    });\n  }\n\n  deleteQuote = e => {\n    let savedQuotesCopy = this.state.savedQuotes.filter(\n      // filter array in this.state,\n      quote => quote._id !== e\n    );\n    console.log(e);\n    console.log(savedQuotesCopy);\n    // then set state\n    this.setState({\n      savedQuotes: savedQuotesCopy\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        {/* <div className=\"container p-2\">\n          <Search searchInput={e => this.searchInput(e)} className=\"input\" />\n        </div> */}\n        <div className=\"container\">\n          {this.state.savedQuotes.map((quote, i) => {\n            return (\n              <SavedQuote\n                quote={quote}\n                delete={() => this.deleteQuote(quote._id)} // pass anonymous function as props\n                key={i}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport NavBar from \"./components/NavBar\";\nimport Quotes from \"./components/Quotes\";\nimport SavedQuotes from \"./components/SavedQuotes\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/quotes\" component={Quotes} />\n        <Route exact path=\"/saved-quotes\" component={SavedQuotes} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}